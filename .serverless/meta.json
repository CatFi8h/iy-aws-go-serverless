{
  "/home/universe.dart.spb/iyurchenko/Documents/projects/GoLang/device-info": {
    "versionSfCore": null,
    "versionFramework": "4.2.1",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "opt": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "yurchenkodev",
            "service": "device-info-service",
            "configValidationMode": "error",
            "stages": {
              "default": {
                "params": {
                  "tableName": "device-info-dev"
                }
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "provided.al2",
              "architecture": "arm64",
              "stage": "dev",
              "region": "us-east-1",
              "httpApi": {
                "cors": true,
                "name": "device-info-service-dev"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:ListTables",
                        "dynamodb:PartiQLInsert"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "UsersTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "environment": {
                "USERS_TABLE": "device-info-dev"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/create-device-info"
                    }
                  },
                  "GetLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/get-device-info"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "device-info-service",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem",
                                  "dynamodb:ListTables",
                                  "dynamodb:PartiQLInsert"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "UsersTable",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "device-info-service",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/create.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "create-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateLogGroup"
                    ]
                  },
                  "GetLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/get.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "get-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetLogGroup"
                    ]
                  },
                  "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateLambdaFunction"
                      },
                      "CodeSha256": "ITHilC6PLH6sU1noFXnuu+77KKAxMQxLreZsqroPb1g="
                    }
                  },
                  "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetLambdaFunction"
                      },
                      "CodeSha256": "X50Mq2eXsg9dG8Cg2dj3WIkMZ1OVCsQOgfwENlQ8zn4="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "device-info-service-dev",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowCredentials": "<REDACTED>",
                        "AllowHeaders": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "AllowMethods": [
                          "OPTIONS",
                          "POST",
                          "GET"
                        ],
                        "AllowOrigins": [
                          "*"
                        ]
                      }
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "CreateLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationCreate": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationCreate"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationCreate"
                  },
                  "GetLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationGet": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationGet"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationGet"
                  },
                  "UsersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "deviceId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "deviceId",
                          "KeyType": "HASH"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                      },
                      "TableName": "device-info-dev"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-CreateLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-GetLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "package": {
              "individually": true,
              "artifactsS3KeyDirname": "serverless/device-info-service/dev/code-artifacts",
              "artifactDirectoryName": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z"
            },
            "functions": {
              "create": {
                "name": "create-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/create.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
              },
              "get": {
                "name": "get-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/get.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
              }
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "deviceId",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    },
                    "TableName": "device-info-dev"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "/home/universe.dart.spb/iyurchenko/Documents/projects/GoLang/device-info",
          "config": {
            "type": "opt"
          },
          "options": {
            "verbose": true
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "default-aws-credential-resolver": "<REDACTED>",
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "yurchenkodev",
            "service": "device-info-service",
            "configValidationMode": "error",
            "stages": {
              "default": {
                "params": {
                  "tableName": "device-info-dev"
                }
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "provided.al2",
              "architecture": "arm64",
              "stage": "dev",
              "region": "us-east-1",
              "httpApi": {
                "cors": true,
                "name": "device-info-service-dev"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:ListTables",
                        "dynamodb:PartiQLInsert"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "UsersTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "environment": {
                "USERS_TABLE": "device-info-dev"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/create-device-info"
                    }
                  },
                  "GetLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/get-device-info"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "device-info-service",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem",
                                  "dynamodb:ListTables",
                                  "dynamodb:PartiQLInsert"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "UsersTable",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "device-info-service",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/create.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "create-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateLogGroup"
                    ]
                  },
                  "GetLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/get.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "get-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetLogGroup"
                    ]
                  },
                  "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateLambdaFunction"
                      },
                      "CodeSha256": "ITHilC6PLH6sU1noFXnuu+77KKAxMQxLreZsqroPb1g="
                    }
                  },
                  "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetLambdaFunction"
                      },
                      "CodeSha256": "X50Mq2eXsg9dG8Cg2dj3WIkMZ1OVCsQOgfwENlQ8zn4="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "device-info-service-dev",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowCredentials": "<REDACTED>",
                        "AllowHeaders": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "AllowMethods": [
                          "OPTIONS",
                          "POST",
                          "GET"
                        ],
                        "AllowOrigins": [
                          "*"
                        ]
                      }
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "CreateLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationCreate": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationCreate"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationCreate"
                  },
                  "GetLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationGet": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationGet"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationGet"
                  },
                  "UsersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "deviceId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "deviceId",
                          "KeyType": "HASH"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                      },
                      "TableName": "device-info-dev"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-CreateLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-GetLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "package": {
              "individually": true,
              "artifactsS3KeyDirname": "serverless/device-info-service/dev/code-artifacts",
              "artifactDirectoryName": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z"
            },
            "functions": {
              "create": {
                "name": "create-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/create.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
              },
              "get": {
                "name": "get-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/get.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
              }
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "deviceId",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    },
                    "TableName": "device-info-dev"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "/home/universe.dart.spb/iyurchenko/Documents/projects/GoLang/device-info",
          "config": {
            "type": "sls"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "yurchenkodev",
            "service": "device-info-service",
            "configValidationMode": "error",
            "stages": {
              "default": {
                "params": {
                  "tableName": "device-info-dev"
                }
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "provided.al2",
              "architecture": "arm64",
              "stage": "dev",
              "region": "us-east-1",
              "httpApi": {
                "cors": true,
                "name": "device-info-service-dev"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:ListTables",
                        "dynamodb:PartiQLInsert"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "UsersTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "environment": {
                "USERS_TABLE": "device-info-dev"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/create-device-info"
                    }
                  },
                  "GetLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/get-device-info"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "device-info-service",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem",
                                  "dynamodb:ListTables",
                                  "dynamodb:PartiQLInsert"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "UsersTable",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "device-info-service",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/create.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "create-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateLogGroup"
                    ]
                  },
                  "GetLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/get.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "get-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetLogGroup"
                    ]
                  },
                  "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateLambdaFunction"
                      },
                      "CodeSha256": "ITHilC6PLH6sU1noFXnuu+77KKAxMQxLreZsqroPb1g="
                    }
                  },
                  "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetLambdaFunction"
                      },
                      "CodeSha256": "X50Mq2eXsg9dG8Cg2dj3WIkMZ1OVCsQOgfwENlQ8zn4="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "device-info-service-dev",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowCredentials": "<REDACTED>",
                        "AllowHeaders": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "AllowMethods": [
                          "OPTIONS",
                          "POST",
                          "GET"
                        ],
                        "AllowOrigins": [
                          "*"
                        ]
                      }
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "CreateLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationCreate": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationCreate"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationCreate"
                  },
                  "GetLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationGet": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationGet"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationGet"
                  },
                  "UsersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "deviceId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "deviceId",
                          "KeyType": "HASH"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                      },
                      "TableName": "device-info-dev"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-CreateLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-GetLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "package": {
              "individually": true,
              "artifactsS3KeyDirname": "serverless/device-info-service/dev/code-artifacts",
              "artifactDirectoryName": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z"
            },
            "functions": {
              "create": {
                "name": "create-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/create.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
              },
              "get": {
                "name": "get-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/get.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
              }
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "deviceId",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    },
                    "TableName": "device-info-dev"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "/home/universe.dart.spb/iyurchenko/Documents/projects/GoLang/device-info",
          "config": {
            "type": "self"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "param": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "yurchenkodev",
            "service": "device-info-service",
            "configValidationMode": "error",
            "stages": {
              "default": {
                "params": {
                  "tableName": "device-info-dev"
                }
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "provided.al2",
              "architecture": "arm64",
              "stage": "dev",
              "region": "us-east-1",
              "httpApi": {
                "cors": true,
                "name": "device-info-service-dev"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:ListTables",
                        "dynamodb:PartiQLInsert"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "UsersTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "environment": {
                "USERS_TABLE": "device-info-dev"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/create-device-info"
                    }
                  },
                  "GetLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/get-device-info"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "device-info-service",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem",
                                  "dynamodb:ListTables",
                                  "dynamodb:PartiQLInsert"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "UsersTable",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "device-info-service",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/create.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "create-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateLogGroup"
                    ]
                  },
                  "GetLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/get.zip"
                      },
                      "Handler": "bootstrap",
                      "Runtime": "provided.al2",
                      "FunctionName": "get-device-info",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Architectures": [
                        "arm64"
                      ],
                      "Environment": {
                        "Variables": {
                          "USERS_TABLE": "device-info-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetLogGroup"
                    ]
                  },
                  "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateLambdaFunction"
                      },
                      "CodeSha256": "ITHilC6PLH6sU1noFXnuu+77KKAxMQxLreZsqroPb1g="
                    }
                  },
                  "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetLambdaFunction"
                      },
                      "CodeSha256": "X50Mq2eXsg9dG8Cg2dj3WIkMZ1OVCsQOgfwENlQ8zn4="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "device-info-service-dev",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowCredentials": "<REDACTED>",
                        "AllowHeaders": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "AllowMethods": [
                          "OPTIONS",
                          "POST",
                          "GET"
                        ],
                        "AllowOrigins": [
                          "*"
                        ]
                      }
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "CreateLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationCreate": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationCreate"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationCreate"
                  },
                  "GetLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationGet": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetDeviceDashinfo": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /device-info",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationGet"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationGet"
                  },
                  "UsersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "deviceId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "deviceId",
                          "KeyType": "HASH"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                      },
                      "TableName": "device-info-dev"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-CreateLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-GetLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-device-info-service-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "package": {
              "individually": true,
              "artifactsS3KeyDirname": "serverless/device-info-service/dev/code-artifacts",
              "artifactDirectoryName": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z"
            },
            "functions": {
              "create": {
                "name": "create-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/create.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
              },
              "get": {
                "name": "get-device-info",
                "handler": "bootstrap",
                "package": {
                  "artifact": "build/lambda/get.zip"
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/device-info",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/device-info"
                  }
                ],
                "memory": 1024,
                "timeout": 6,
                "runtime": "provided.al2",
                "vpc": {},
                "versionLogicalId": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
              }
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "deviceId",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    },
                    "TableName": "device-info-dev"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "/home/universe.dart.spb/iyurchenko/Documents/projects/GoLang/device-info",
          "config": {
            "type": "param"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/home/universe.dart.spb/iyurchenko/Documents/projects/GoLang/device-info",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "yurchenkodev",
      "service": "device-info-service",
      "configValidationMode": "error",
      "stages": {
        "default": {
          "params": {
            "tableName": "device-info-dev"
          }
        }
      },
      "provider": {
        "name": "aws",
        "runtime": "provided.al2",
        "architecture": "arm64",
        "stage": "dev",
        "region": "us-east-1",
        "httpApi": {
          "cors": true,
          "name": "device-info-service-dev"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:ListTables",
                  "dynamodb:PartiQLInsert"
                ],
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "UsersTable",
                      "Arn"
                    ]
                  }
                ]
              }
            ]
          }
        },
        "environment": {
          "USERS_TABLE": "device-info-dev"
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/create-device-info"
              }
            },
            "GetLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/get-device-info"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "device-info-service",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/create-device-info:*:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/get-device-info:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:ListTables",
                            "dynamodb:PartiQLInsert"
                          ],
                          "Resource": [
                            {
                              "Fn::GetAtt": [
                                "UsersTable",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "device-info-service",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/create.zip"
                },
                "Handler": "bootstrap",
                "Runtime": "provided.al2",
                "FunctionName": "create-device-info",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "device-info-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateLogGroup"
              ]
            },
            "GetLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z/get.zip"
                },
                "Handler": "bootstrap",
                "Runtime": "provided.al2",
                "FunctionName": "get-device-info",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "device-info-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetLogGroup"
              ]
            },
            "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateLambdaFunction"
                },
                "CodeSha256": "ITHilC6PLH6sU1noFXnuu+77KKAxMQxLreZsqroPb1g="
              }
            },
            "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetLambdaFunction"
                },
                "CodeSha256": "X50Mq2eXsg9dG8Cg2dj3WIkMZ1OVCsQOgfwENlQ8zn4="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "device-info-service-dev",
                "ProtocolType": "HTTP",
                "CorsConfiguration": {
                  "AllowCredentials": "<REDACTED>",
                  "AllowHeaders": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "AllowMethods": [
                    "OPTIONS",
                    "POST",
                    "GET"
                  ],
                  "AllowOrigins": [
                    "*"
                  ]
                }
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "CreateLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationCreate": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "CreateLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostDeviceDashinfo": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /device-info",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationCreate"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationCreate"
            },
            "GetLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGet": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetDeviceDashinfo": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /device-info",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGet"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGet"
            },
            "UsersTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "AttributeDefinitions": [
                  {
                    "AttributeName": "deviceId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "deviceId",
                    "KeyType": "HASH"
                  }
                ],
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                },
                "TableName": "device-info-dev"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-device-info-service-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
              },
              "Export": {
                "Name": "sls-device-info-service-dev-CreateLambdaFunctionQualifiedArn"
              }
            },
            "GetLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
              },
              "Export": {
                "Name": "sls-device-info-service-dev-GetLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-device-info-service-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-device-info-service-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/device-info-service/dev/code-artifacts",
        "artifactDirectoryName": "serverless/device-info-service/dev/1724281689746-2024-08-21T23:08:09.746Z"
      },
      "functions": {
        "create": {
          "name": "create-device-info",
          "handler": "bootstrap",
          "package": {
            "artifact": "build/lambda/create.zip"
          },
          "events": [
            {
              "httpApi": {
                "path": "/device-info",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/device-info"
            }
          ],
          "memory": 1024,
          "timeout": 6,
          "runtime": "provided.al2",
          "vpc": {},
          "versionLogicalId": "CreateLambdaVersion32TUhRmtB4tlZISvgavs0w99eV76dWosYvthkZfUg"
        },
        "get": {
          "name": "get-device-info",
          "handler": "bootstrap",
          "package": {
            "artifact": "build/lambda/get.zip"
          },
          "events": [
            {
              "httpApi": {
                "path": "/device-info",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/device-info"
            }
          ],
          "memory": 1024,
          "timeout": 6,
          "runtime": "provided.al2",
          "vpc": {},
          "versionLogicalId": "GetLambdaVersionOTz53YeRRRfHqlkVAuPQwr8uE3zpezuH0HCiRCl3nY"
        }
      },
      "resources": {
        "Resources": {
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "deviceId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "deviceId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "device-info-dev"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: yurchenkodev\nservice: device-info-service\n\nconfigValidationMode: error\n\nstages:\n  default:\n    params:\n      tableName: \"device-info-${sls:stage}\"\n\nprovider:\n  name: aws\n  runtime: provided.al2 \n  architecture: arm64   \n  stage: ${opt:stage, 'dev'}\n  region: ${opt:region, 'us-east-1'}\n  httpApi:\n    cors: true\n    name: ${self:service}-${self:provider.stage}\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - dynamodb:Query\n            - dynamodb:Scan\n            - dynamodb:GetItem\n            - dynamodb:PutItem\n            - dynamodb:UpdateItem\n            - dynamodb:DeleteItem\n            - dynamodb:ListTables\n            - dynamodb:PartiQLInsert\n          Resource:\n            - Fn::GetAtt: [UsersTable, Arn]\n  environment:\n    USERS_TABLE: ${param:tableName}\n\npackage:\n  individually: true \n\nfunctions:\n  create:\n    name: create-device-info\n    handler: bootstrap # <- the handler name must be bootstrap and in the root of the zip\n    package:\n      artifact: build/lambda/create.zip # override the default artifact handling to use the built zip\n    events:\n      - httpApi:\n          path: /device-info\n          method: post\n  get:\n    name: get-device-info\n    handler: bootstrap # <- the handler name must be bootstrap and in the root of the zip\n    package:\n      artifact: build/lambda/get.zip # override the default artifact handling to use the built zip\n    events:\n      - httpApi:\n          path: /device-info\n          method: get\n\nresources:\n  Resources:\n    UsersTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        AttributeDefinitions:\n          - AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          - AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${param:tableName}",
    "command": [
      "deploy"
    ],
    "options": {
      "verbose": true
    },
    "error": {
      "message": "An error occurred: GetLogGroup - /aws/lambda/get-device-info already exists in stack arn:aws:cloudformation:us-east-1:471112806713:stack/golang-provided-al2-arm64-dev/dc1fd1b0-5fef-11ef-b8fb-0e84527a8049.",
      "stack": "ServerlessError2: An error occurred: GetLogGroup - /aws/lambda/get-device-info already exists in stack arn:aws:cloudformation:us-east-1:471112806713:stack/golang-provided-al2-arm64-dev/dc1fd1b0-5fef-11ef-b8fb-0e84527a8049.\n    at file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:686:832\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AwsDeploy.update (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:686:25423)\n    at async aws:deploy:deploy:updateStack (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:697:5474)\n    at async PluginManager.runHooks (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:884:9309)\n    at async PluginManager.invoke (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:884:10080)\n    at async PluginManager.spawn (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:884:10441)\n    at async PluginManager.runHooks (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:884:9309)\n    at async PluginManager.invoke (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:884:10080)\n    at async PluginManager.run (file:///home/universe.dart.spb/iyurchenko/.serverless/releases/4.2.1/package/dist/sf-core.js:884:10811)",
      "code": "AWS_CLOUD_FORMATION_UPDATE_STACK_INTERNAL_LOGS_LOG_GROUP_CREATE_FAILED"
    },
    "params": {
      "tableName": "device-info-dev"
    },
    "machineId": "3fba69669ee08e1061fc1ce10f64c3ea",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "820ff72c-0481-4f81-9b1a-f6f938b4e35b",
    "orgName": "yurchenkodev",
    "userId": "VPgQJQLCjbqNjhx3YV",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "yurchenkodev",
    "subscription": null,
    "userEmail": "yurchenko.igor6@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "471112806713",
    "projectType": "framework",
    "versionSf": "4.2.1",
    "serviceProviderAwsCfStackName": "device-info-service-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:471112806713:stack/device-info-service-dev/3c4a39f0-6012-11ef-906e-0affcc0798b9",
    "serviceProviderAwsCfStackCreated": "2024-08-21T23:08:10.969Z",
    "serviceProviderAwsCfStackUpdated": "2024-08-21T23:08:43.322Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_ROLLBACK_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "device-info-service-dev-serverlessdeploymentbucket-wdtbcqspsddw"
      }
    ]
  }
}